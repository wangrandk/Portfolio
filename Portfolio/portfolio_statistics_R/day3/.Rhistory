x <- x[,1]
x1 <- x[1:78]
x2 <- x[-(1:78)]
x3 <- ts(x1,frequency=12,start=1995)
ts.plot(x1)
var(x1)
mean(x1)
#seasonal decomposition
plot(stl(log(x3),s.window = "per", t.window = 101,na.action = na.omit))
par(mfrow=c(1,2),mar=c(3,3,1,1),mgp=c(2,0.7,0))
acf(x1)
pacf(x1)
diffx12=diff(x1,1,1) #Wt
diffx1=diff(diffx12,12,1)
par(mfrow=c(3,1))
ts.plot(diffx1)
acf(diffx1, lag.max = 30,na.action = na.omit)
pacf(diffx1,lag.max = 30, na.action = na.omit)
diagtool <- function(residuals){
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
plot(residuals)
acf(residuals)
pacf(residuals)
}
diagtool(diffx1)
ar1model = arima(x1, order = c(0,1,0), method ="ML",seasonal = list(order = c(0, 1, 0), period = 12),)
ar2model = arima(x1, order = c(2,1,1), method ="ML",seasonal = list(order = c(0, 1, 1), period = 12),)
ar2model
ar1model
(length(ar1model$residuals)-1)/2
#binom.test((length(ar1model$residuals)-1)/2,length(ar1model$residuals)-1)
### sd:
sqrt((length(ar1model$residuals)-1)/4)
### 95% interval:
(length(ar1model$residuals)-1)/2 + 1.96 * sqrt((length(ar1model$residuals)-1)/4) * c(-1,1)
### test:
res <- ar1model$residuals
(N.sign.changes <- sum( res[-1] * res[-length(res)]<0 ))
ar1model = arima(x1, order = c(0,0,0), method ="ML",seasonal = list(order = c(0, 1, 0), period = 12),)
ar2model = arima(x1, order = c(2,1,1), method ="ML",seasonal = list(order = c(0, 1, 1), period = 12),)
ar2model
ar1model
dat <- read.table("assignment3data.txt")
x <- ts(dat,frequency=12,start=1995)
dat <- read.table("assignment3data.txt")
dat <- read.table("assignment3data.txt")
dat <- read.table("assignment3data.txt")
library("astsa", lib.loc="~/R/win-library/3.1")
library("forecast", lib.loc="~/R/win-library/3.1")
library("fUnitRoots", lib.loc="~/R/win-library/3.1")
dat <- read.table("assignment3data.txt")
dat <- read.table("assignment3data.txt")
e<-rnorm(3000)
e<-rnorm(3000)
y<-cumsum(e)
par(mfrow=c(2,2))
ts.plot(e)
acf(e)
ts.plot(y)
acf(y)
var(y)
e<-rnorm(3000)
y<-cumsum(e)
var(y)
e<-rnorm(3000)
e<-rnorm(3000)
var(e)
e<-rnorm(3000)
var(e)
e<-rnorm(3000)
var(e)
sumvar(e)
var(y)
var(y)
e<-rnorm(3000)
var(y)
e<-rnorm(3000)
y<-cumsum(e)
var(y)
par(mfrow=c(1,2))
acf(y2)
y1<-arima.sim(model = list(ar = 0.9, order = c(1,0,0)), n = 500)
par(mfrow=c(3,1))
ts.plot(y1)
acf(y1)
pacf(y1)
y1<-arima.sim(model = list(ar = 0.9, order = c(1,0,0)), n = 500)
par(mfrow=c(3,1))
ts.plot(y1)
acf(y1,lag.max = 40)
pacf(y1,lag.max = 40)
y1<-arima.sim(model = list(ar = 0.9, order = c(1,0,0)), n = 500)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y1)
acf(y1,lag.max = 40)
pacf(y1,lag.max = 40)
y2<-arima.sim(model=list(ar=c(rep(0,11),.7)), n = 500)
ts.plot(y2)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y2)
acf(y2,lag.max = 40)
pacf(y2,lag.max = 40)
acf(y2,lag.max = 60)
pacf(y2,lag.max = 60)
acf(y2,lag.max = 100)
pacf(y2,lag.max = 60)
ts.plot(y2)
acf(y2,lag.max = 100)
ts.plot(y2)
acf(y2,lag.max = 100)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y2)
acf(y2,lag.max = 100)
pacf(y2,lag.max = 60)
y2<-arima.sim(model=list(ar=c(rep(0,11),0.7)), n = 500)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y2)
acf(y2,lag.max = 100)
pacf(y2,lag.max = 60)
y2<-arima.sim(model=list(ar=c(rep(0,11),0.7)), n = 500)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y2)
acf(y2,lag.max = 100)
pacf(y2,lag.max = 60)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y2)
acf(y2,lag.max = 100)
pacf(y2,lag.max = 60)
y3<-arima.sim(model=list(ar=c(-.9,0,0,0,0,0,0,0,0,0,0,.4,-.36)), n=500)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y3)
acf(y3,lag.max = 100)
pacf(y3,lag.max = 60)
y2<-arima.sim(model=list(ar=c(rep(0,11),0.7)), n = 500)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y2)
acf(y2,lag.max = 100)
pacf(y2,lag.max = 60)
y1<-arima.sim(model = list(ar = 0.9, order = c(1,0,0)), n = 500)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y1)
acf(y1,lag.max = 40)
pacf(y1,lag.max = 40)
y4<-arima.sim(model=list(ar=c(.9,0,0,0,0,0,0,0,0,0,0,.7,.63)), n=500)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
y4<-arima.sim(model=list(ar=c(.9,0,0,0,0,0,0,0,0,0,0,.7,.63)), n=500)
y4<-arima.sim(model=list(ar=c(.9,0,0,0,0,0,0,0,0,0,0,.7,.63)), n=500)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y4)
acf(y4,lag.max = 100)
pacf(y4,lag.max = 60)
acf(y4,lag.max = 60)
y4<-arima.sim(model=list(ar=c(.9,0,0,0,0,0,0,0,0,0,0,.7,.63)), n=500)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y4)
acf(y4,lag.max = 60)
pacf(y4,lag.max = 60)
y5<-arima.sim(model=list(ma=c(.4,0,0,0,0,0,0,0,0,0,0,.3,.12)), n=500)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y5)
acf(y5,lag.max = 60)
pacf(y5,lag.max = 60)
y6<-arima.sim(model=list(ma=c(.4,0,0,0,0,0,0,0,0,0,0,.7,.28)), n=500)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y6)
acf(y6,lag.max = 60)
pacf(y6,lag.max = 60)
y6<-arima.sim(model=list(ma=c(.4,0,0,0,0,0,0,0,0,0,0,.7,.28)), n=500)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y6)
acf(y6,lag.max = 60)
pacf(y6,lag.max = 60)
y4 = y1 %*%y2
y4
y1
y4 <- y1 %*%y2
y4
st.y4
ts.y1
y1
help(mar)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.9,0))
ts.plot(y6)
acf(y6,lag.max = 60)
pacf(y6,lag.max = 60)
acf(y6,lag.max = 60)
y6<-arima.sim(model=list(ma=c(.7,0,0,0,0,0,0,0,0,0,0,.4,.28)), n=500)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y6)
acf(y6,lag.max = 60)
pacf(y6,lag.max = 60)
y6<-arima.sim(model=list(ma=c(.7,0,0,0,0,0,0,0,0,0,0,.4,.28)), n=500)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y6)
acf(y6,lag.max = 60)
pacf(y6,lag.max = 60)
acf(y6,lag.max = 60)
y6<-arima.sim(model=list(ar=c(.4,0,0,0,0,0,0,0,0,0,0,.7,.28)), n=500)
y6<-arima.sim(model=list(ma=c(.4,0,0,0,0,0,0,0,0,0,0,.7,.28)), n=500)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y6)
acf(y6,lag.max = 60)
pacf(y6,lag.max = 60)
y6<-arima.sim(model=list(ar=c(.4,0,0,0,0,0,0,0,0,0,0,.7,.28)), n=500)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y6)
acf(y6,lag.max = 60)
pacf(y6,lag.max = 60)
y6<-arima.sim(model=list(ma=c(.4,0,0,0,0,0,0,0,0,0,0,.7,.28)), n=500)
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
ts.plot(y6)
acf(y6,lag.max = 60)
pacf(y6,lag.max = 60)
x = arima.sim(list(order = c(1,1,0), ar = 0.7), n = 200)
z = cbind(x, lag(x,-3), lag(x,-4))
y = 15+0.8*z[,2]+1.5*z[,3]
ccf(z[,1],y,na.action = na.omit)
y
pwx=ar1model$residuals
a1 <- ar1model$coef
a1
x = arima.sim(list(order = c(1,1,0), ar = 0.7), n = 200)
z = cbind(x, lag(x,-3), lag(x,-4))
y = 15+0.8*z[,2]+1.5*z[,3]
## CCF
ccf(z[,1],y,na.action = na.omit)
#ccf(x,y,na.action = na.omit)
## Starting to PreWhite:
## Which model for x?
acf(x)
diff1x=diff(z[,1],1,1)
acf(diff1x, na.action = na.omit)
pacf(diff1x, na.action = na.omit)
ar1model = arima(z[,1], order = c(1,1,0))
ar1model
## Use it to PreWhite x:
pwx=ar1model$residuals
a1 <- ar1model$coef
newpwy = filter(y, filter = c(1,-(1+a1), a1), sides =1)
ccf (pwx,newpwy,na.action=na.omit)
a = cbind(y,lag3x = lag(x,-3), lag4x=lag(x, -4))
summary(lm(y ~lag3x+lag4x, data = a, na.action = na.omit))
lag3x
a = cbind(y,lag3x = lag(x,-3), lag4x=lag(x, -4))
lag3x
lag(x,-3)
lag(x,-4)
library(forecast)
dat <- read.table("assignment3data.txt")
x <- ts(dat,frequency=12,start=1995)
x <- x[1-87]
x1 <- x[1:78]
x2 <- x[-(1:78)]
x1 <- ts(x1, start=1995, frequency = 12)
x2 <- ts(x2, start=c(2001, 7), end=c(2002, 3), frequency = 12)
library(forecast)
dat <- read.table("assignment3data.txt")
x <- ts(dat,frequency=12,start=1995)
x <- x[1-87]
x1 <- x[1:78]
x2 <- x[-(1:78)]
x1 <- ts(x1, start=1995, frequency = 12)
library(forecast)
dat <- read.table("assignment3data.txt")
lines(p$pred[79:87], type="l", col="blue", lty=2)
dat <- read.table("assignment3data.txt")
x <- ts(dat,frequency=12,start=1995)
x <- x[,1]
x1 <- x[1:78]
x2 <- x[-(1:78)]
x3 <- ts(x1,frequency=12,start=1995)
ts.plot(x1)
var(x1)
dat <- read.table("assignment3data.txt")
x <- ts(dat,frequency=12,start=1995)
dat <- read.table("assignment3data.txt")
x <- ts(dat,frequency=12,start=1995)
dat <- read.table("assignment3data.txt")
x <- ts(dat,frequency=12,start=1995)
x <- x[,1]
x1 <- x[1:78]
x2 <- x[-(1:78)]
x3 <- ts(x1,frequency=12,start=1995)
ar2model = arima(lhct[7202:8782], order = c(0,1,1), method ="ML",seasonal = list(order = c(3, 1, 1), period = 24))
setwd("C:\\Users\\1RAN\\OneDrive\\Documents\\Time_Series_Analysis\\assignment04")
hc <- read.csv("veks.csv")$HC.f
#jdate <- read.csv("veks.csv")$jdate
hct<-ts(hc)
hc <- read.csv("veks.csv")$HC.f
#jdate <- read.csv("veks.csv")$jdate
hct<-ts(hc)
summary(hct)
ts.plot(hct)
lhct <- log(hct)
summary(lhct)
par(mfrow=c(3,1),mgp=c(2,0.7,0), mar=c(3,3,3,1))
ts.plot(lhct)
acf(lhct,lag.max = 30)
pacf(lhct,lag.max = 30)
dlhct <- diff(lhct,1)
dlhct <- diff(dlhct,24)
head(dlhct)
summary(dlhct)
dlhct <- na.omit(dlhct)
par(mfrow=c(3,1),mgp=c(2,0.7,0), mar=c(3,3,3,1))
ts.plot(dlhct)
lines(dlhct[7202:8782],col=3,xlim=c(7202,8782))
acf(dlhct,lag.max = 180)
pacf(dlhct,lag.max = 280)
diagtool <- function(residuals){
par(mfrow=c(3,1),mar=c(3,3,1,1),mgp=c(2,0.7,0))
plot(residuals)
acf(residuals,lag.max = 80)
pacf(residuals,lag.max = 80)
}
diagtool(dlhct)
ar1model = arima(lhct[7202:8782], order = c(0,1,0), method ="ML",seasonal = list(order = c(0, 1, 0), period = 24))
ar2model = arima(lhct[7202:8782], order = c(0,1,1), method ="ML",seasonal = list(order = c(3, 1, 1), period = 24))
ar1model
ar2model
rm(list=ls())
setwd("C:\\Users\\1RAN\\OneDrive\\Documents\\Time_Series_Analysis\\assignment04")
hc <- read.csv("veks.csv")$HC.f
#jdate <- read.csv("veks.csv")$jdate
hct<-ts(hc)
summary(hct)
ts.plot(hct)
library("forecast", lib.loc="~/R/win-library/3.1")
library("formatR", lib.loc="~/R/win-library/3.1")
library("fma", lib.loc="~/R/win-library/3.1")
library("digest", lib.loc="~/R/win-library/3.1")
library("bitops", lib.loc="~/R/win-library/3.1")
library("astsa", lib.loc="~/R/win-library/3.1")
library("fUnitRoots", lib.loc="~/R/win-library/3.1")
library("highr", lib.loc="~/R/win-library/3.1")
library("fracdiff", lib.loc="~/R/win-library/3.1")
library("htmltools", lib.loc="~/R/win-library/3.1")
library("manipulate", lib.loc="~/R/win-library/3.1")
library("lmtest", lib.loc="~/R/win-library/3.1")
library("Rcpp", lib.loc="~/R/win-library/3.1")
library("rstudio", lib.loc="~/R/win-library/3.1")
library("sandwich", lib.loc="~/R/win-library/3.1")
library("graphics", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("fUnitRoots", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("datasets", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("boot", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("tools", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("translations", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("timeSeries", lib.loc="C:/Program Files/R/R-3.1.1/library")
rm(list=ls())
setwd("C:\\Users\\1RAN\\OneDrive\\Documents\\Time_Series_Analysis\\assignment04")
hc <- read.csv("veks.csv")$HC.f
#jdate <- read.csv("veks.csv")$jdate
hct<-ts(hc)
summary(hct)
ts.plot(hct)
lhct <- log(hct)
summary(lhct)
par(mfrow=c(3,1),mgp=c(2,0.7,0), mar=c(3,3,3,1))
ts.plot(lhct)
acf(lhct,lag.max = 30)
setwd("C:\\Users\\1RAN\\OneDrive\\Documents\\Time_Series_Analysis\\assignment04")
hc <- read.csv("veks.csv")$HC.f
demo()
rm(list=ls())
setwd("C:\\Users\\1RAN\\OneDrive\\Documents\\Time_Series_Analysis\\assignment04")
hc <- read.csv("veks.csv")$HC.f
x = arima.sim(list(order = c(1,1,0), ar = 0.7), n = 200)
z = cbind(x, lag(x,-3), lag(x,-4))
y = 15+0.8*z[,2]+1.5*z[,3]
## CCF
ccf(z[,1],y,na.action = na.omit)
#ccf(x,y,na.action = na.omit)
## Starting to PreWhite:
## Which model for x?
acf(x)
diff1x=diff(z[,1],1,1)
acf(diff1x, na.action = na.omit)
pacf(diff1x, na.action = na.omit)
ar1model = arima(z[,1], order = c(1,1,0))
ar1model
## Use it to PreWhite x:
pwx=ar1model$residuals
a1 <- ar1model$coef
## Use it to PreWhite y:
newpwy = filter(y, filter = c(1,-(1+a1), a1), sides =1)
## CCF after PW:
ccf (pwx,newpwy,na.action=na.omit)
## Let us fit it
a = cbind(y,lag3x = lag(x,-3), lag4x=lag(x, -4))
summary(lm(y ~lag3x+lag4x, data = a, na.action = na.omit))
#arima(xreg=)
arima(y,xreg=a[,-1])
##########################
## With noise added: ####
##########################
## Simulating data
x = arima.sim(list(order = c(1,1,0), ar = 0.7), n = 200)
z = cbind(x, lag(x,-3), lag(x,-4))
y = 15 + 0.8*z[,2] + 1.5*z[,3] + rnorm(nrow(z),sd = 1)
## CCF
ccf(z[,1],y,na.action = na.omit)
## Starting to PreWhite:
## Which model for x?
acf(x)
diff1x=diff(z[,1],1)
acf(diff1x, na.action = na.omit)
pacf(diff1x, na.action = na.omit)
(ar1model = arima(z[,1], order = c(1,1,0)))
## Use it to PreWhite x:
pwx=ar1model$residuals
a1 <- ar1model$coef
## Use it to PreWhite y:
newpwy = filter(y, filter = c(1,-(1+a1), a1), sides =1)
## CCF after PW:
ccf(pwx, newpwy, na.action=na.omit)
cpgram(ar1model$residuals)
## Let us fit it
a = cbind(y,lag3x = lag(x,-3), lag4x=lag(x, -4))
summary(lm(y ~lag3x+lag4x, data = a, na.action = na.omit)) # Wrong!
#arima(xreg=)
arima(y,order=c(0,0,0),xreg=a[,-1])
## same results as "lm"
##############################
## With ARMA noise added: ####
##############################
## Simulating data
x = arima.sim(list(order = c(1,1,0), ar = 0.7), n = 200)
z = cbind(x, lag(x,-3), lag(x,-4))
y = 15 + 0.8*z[,2] + 1.5*z[,3] + arima.sim(list(order = c(0,0,2), ma = c(0.7,0.5)), n = nrow(z))
y = 15 + 0.8*z[,2] + 1.5*z[,3] + arima.sim(list(order = c(1,0,1), ar=0.8, ma = 0.7), n = nrow(z))
## CCF
ccf(z[,1],y,na.action = na.omit)
## Starting to PreWhite:
acf(x)
diff1x=diff(z[,1],1)
acf(diff1x, na.action = na.omit)
pacf(diff1x, na.action = na.omit)
## Which model for x?
(ar1model = arima(z[,1], order = c(1,1,0)))
## Use it to PreWhite x:
pwx=ar1model$residuals
a1 <- ar1model$coef
hc <- read.csv("veks.csv")$HC.f
f
f<-read.table("fertilizer.txt",header=TRUE)
setwd("C:\\Users\\RAN\\OneDrive\\books\\Applied stat\\day3")
f<-read.table("fertilizer.txt",header=TRUE)
f
a1 <- lm(value ~ fertilizer , f)
summary(a1)
a2 <- lm(value ~ field , f)
summary(a2)
summary(a1)
anova(a2)
a3<- lm(value ~ fertilizer*field , f)
summary(a3)
anova(a3)
a3<- lm(value ~ fertilizer+field , f)
summary(a3)
anova(a3)
F<-data.frame(yield=c(),
field=rep(c("a","b","c"),2)
fertilizer=rep(c("A","B"),3))
f
F<-data.frame(yield=c(10.3,-4.95,-6.00,10.30,-4.65,-11),
field=rep(c("a","b","c"),2)
fertilizer=rep(c("A","B"),3))
F<-data.frame(yield=c(10.3,-4.95,-6.00,10.30,-4.65,-11),
field=rep(c("a","b","c"),2),
fertilizer=rep(c("A","B"),3))
#2 Determine whether Fertilizer and/or Field influence on the yield
F
plot(NOISE~(.)^3,Filter)
Filter<-read.table("filter.txt",header=TRUE)
summary(Filter)
Filter
#1 Determine whether size, type and side influence on the noise level by doing a graphical comparison
pairs(Filter,panel=panel.smooth)
Filter<-read.table("filter.txt",header=TRUE)
summary(Filter)
Filter
pairs(Filter,panel=panel.smooth)
Filter$SIZE<-as.factor(Filter$SIZE)
Filter$TYPE<-as.factor(Filter$TYPE)
Filter$SIDE<-as.factor(Filter$SIDE)
mlm<-lm(NOISE~(.)^2,Filter)
summary(mlm)
anova(mlm)
plot(NOISE~(.)^3,Filter)
plot(NOISE~(.)^3,Filter)
mlm<-lm(NOISE~(.)^3,Filter)
summary(mlm)
plot(NOISE~(.)^3,Filter)
plot(mlm)
mlm<-lm(NOISE~(.)^3,Filter)
plot(mlm)
summary(mlm)
mlm<-lm(NOISE~(.)^3,Filter)
plot(mlm)
par(mfrow=c(2,2))
Filter<-read.table("filter.txt",header=TRUE)
summary(Filter)
Filter
#1 Determine whether size, type and side influence on the noise level by doing a graphical comparison
pairs(Filter,panel=panel.smooth)
#2 Determine whether size, type and side influence on the noise level by the appropriate statistical analysis? answer: the interaction model is ideal.
Filter$SIZE<-as.factor(Filter$SIZE)
Filter$TYPE<-as.factor(Filter$TYPE)
Filter$SIDE<-as.factor(Filter$SIDE)
par(mfrow=c(2,2))
plot(mlm)
