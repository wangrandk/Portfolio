coefplot(Mpls, ncomp = 8, se.whiskers = TRUE, labels = prednames(Mpls),
cex.axis = 0.5, main = "DE,PLS with 2")
par(mfrow=c(2, 2))
coefplot(Mpcr, ncomp = 1, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis =0.5, main = "DE,PCR with 1")
coefplot(Mpcr, ncomp = 2, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis = 0.5, main = "DE,PCR with 2")
coefplot(Mpcr, ncomp = 15, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis = 0.5, main = "DE,PCR with 3")
coefplot(Mpls, ncomp = 9, se.whiskers = TRUE, labels = prednames(Mpls),
cex.axis = 0.5, main = "DE,PLS with 2")
par(mfrow=c(2, 2))
coefplot(Mpcr, ncomp = 1, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis =0.5, main = "DE,PCR with 1")
coefplot(Mpcr, ncomp = 2, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis = 0.5, main = "DE,PCR with 2")
coefplot(Mpcr, ncomp = 15, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis = 0.5, main = "DE,PCR with 3")
coefplot(Mpls, ncomp = 10, se.whiskers = TRUE, labels = prednames(Mpls),
cex.axis = 0.5, main = "DE,PLS with 2")
rmsep<-sqrt(mean(pectin$DE-preds)^2)
rmsep
pls::scoreplot(Seg_pls,comp=1:3,labels=rownames(pectin))
par(mfrow=c(3,3))
pls::loadingplot(Seg_pls, comps = 1, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 2, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 3, scatter = F, labels = prednames(Seg_pls),)
par(mfrow=c(2,2))
pls::loadingplot(Seg_pls, comps = 4, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 5, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 6, scatter = F, labels = prednames(Seg_pls),)
par(mfrow=c(2,2))
pls::loadingplot(Seg_pls, comps = 7, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 8, scatter = F, labels = prednames(Seg_pls),)
pls::scoreplot(Seg_pls,comp=1:3,labels=rownames(pectin))
par(mfrow=c(3,3))
pls::loadingplot(Seg_pls, comps = 1, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 2, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 3, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 4, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 5, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 6, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 7, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 8, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 9, scatter = F, labels = prednames(Seg_pls),)
Mpls3<-plsr(DE~X,ncomp=10,data=pectin,validation="LOO",scale=TRUE,jackknife=TRUE)
par(mfrow=c(2, 2))
obsfit<-predplot(Mpls3,labels=rownames(pectin),which="validation")
Residuals<-obsfit[,1]-obsfit[,2]
abline(lm(obsfit[,2]~obsfit[,1]),col=2)
plot(obsfit[,2], abs(Residuals), type = "n", xlab = "Fitted", ylab = "Residuals")
text(obsfit[,2], Residuals, labels = rownames(pectin))
qqnorm(Residuals)
#leverage of X and Hat matrix
Xf <- scores(Mpls3)
H <- Xf %*% solve(t(Xf) %*% Xf) %*% t(Xf)
leverage <- diag(H)
plot(leverage, abs(Residuals), type = "n", main = "3")
text(leverage, abs(Residuals), labels = rownames(pectin))
par(mfrow=c(2, 2))
obsfit<-predplot(Mpls3,labels=rownames(pectin),which="validation")
abline(lm(obsfit[,2]~obsfit[,1]),col=2)
plot(Mpls3, "validation", estimate = c("train", "CV"), val.type = "R2",
legendpos = "bottomright")
coefplot(Mpls3, se.whiskers = TRUE, labels = prednames(Mpls3), cex.axis = 0.5)
biplot(Mpls3,var.axes = TRUE)
preds <- predict(Mpls3, newdata =pectin, ncomp = 3)
plot(pectin$DE, preds)
preds <- predict(Mpls3, newdata =pectin, ncomp = 10)
plot(pectin$DE, preds)
rmsep<-sqrt(mean(pectin$DE-preds)^2)
rmsep
preds <- predict(Mpls3, newdata =pectin, ncomp = 10)
plot(pectin$DE, preds)
rmsep<-sqrt(mean(pectin$DE-preds)^2)
preds <- predict(Mpls3, newdata =pectin, ncomp = 8)
plot(pectin$DE, preds)
rm(list=ls())
pectin<-read.table("Pectin_and_DE.txt",header=T,sep=";",dec=",")
pectin$NIR<-as.matrix([ectom[,-1]])
pectin$NIR<-as.matrix([pectin[,-1])
pectin$NIR<-as.matrix(pectin[,-1])
length(pectin$DE)
pectin$train<-TRUE
pectin@train[sample(1:length(pectin$DE),23)]
pectin$NIR<-as.matrix(pectin[,-1])
length(pectin$DE)
pectin$train<-TRUE
pectin@train[sample(1:length(pectin$DE),23)]
pectin@train[sample(1:length(pectin$DE),23)]<-FALSE
pectin$train[sample(1:length(pectin$DE),23)] <- FALSE
train<-pectin$train<-TRUE
test<-pectin$train[sample(1:length(pectin$DE),23)] <- FALSE
test
pectin$train
Mpcr<-pcr(DE~NIR,ncomp =60,data=train,validation="LOO",scale=T,jackknife=T )
Mpcr<-pcr(DE~NIR,ncomp =60,data=pectin$train,validation="LOO",scale=T,jackknife=T )
pectin$NIR<-as.matrix(pectin[,-1])
rm(list=ls())
pectin<-read.table("Pectin_and_DE.txt",header=T,sep=";",dec=",")
pectin$NIR<-as.matrix(pectin[,-1])
length(pectin$DE)
pectin$train <- TRUE
rm(list=ls())
pectin<-read.table("Pectin_and_DE.txt",header=T,sep=";",dec=",")
pectin$NIR<-as.matrix(pectin[,-1])
length(pectin$DE)
train<-pectin$train <- TRUE
test<-pectin$train[sample(1:length(pectin$DE),23)] <- FALSE
Mpcr<-pcr(DE~NIR,ncomp =60,data=train,validation="LOO",scale=T,jackknife=T )
Mpcr<-pcr(DE~NIR,ncomp =60,data=train,validation="LOO",scale=T,jackknife=T )
Mpcr<-pcr(DE~NIR,ncomp =30,data=train,validation="LOO",scale=T,jackknife=T )
summary(pectin)
Mpcr<-pcr(DE~NIR,ncomp =30,data=train,validation="LOO",scale=T,jackknife=T )
test
length(pectin$DE)
summary(pectin)
train<pectin[-pectin$train <- TRUE,]
train<-pectin[-pectin$train <- TRUE,]
summary(pectin)
train<-pectin[-pectin$train =TRUE,]
train<-pectin[pectin$train =TRUE,]
test<-pectin[pectin$train[sample(1:length(pectin$DE),23)]= FALSE,]
train<-pectin[pectin$train <-TRUE,]
test<-pectin[pectin$train[sample(1:length(pectin$DE),23)]<- FALSE,]
Mpcr<-pcr(DE~NIR,ncomp =30,data=train,validation="LOO",scale=T,jackknife=T )
train<-pectin$train <-TRUE,
train<-pectin$train <-TRUE
test<-pectin[pectin$train[sample(1:length(pectin$DE),23)]<- FALSE,]
train<-pectin[pectin$train <-TRUE,]
test<-pectin[pectin$train[sample(1:length(pectin$DE),23)]<- FALSE,]
train<-pectin$train <-TRUE
test<-pectin$train[sample(1:length(pectin$DE),23)]<- FALSE
train<-pectin[pectin$train =TRUE,]
train<-pectin[pectin$train <-TRUE,]
test<-pectin[pectin$train[sample(1:length(pectin$DE),23)]<- FALSE,]
test<-pectin[pectin$train[sample(1:length(pectin$DE),23)]<- FALSE,]
pectin$train <-TRUE
pectin$train[sample(1:length(pectin$DE),23)]<- FALSE
pectin_TEST <- pectin[pectin$train==FALSE,]
pectin_TRAIN <- pectin[pectin$train==TRUE,]
rm(list=ls())
pectin<-read.table("Pectin_and_DE.txt",header=T,sep=";",dec=",")
pectin$NIR<-as.matrix(pectin[,-1])
pectin$train <-TRUE
pectin$train[sample(1:length(pectin$DE),23)]<- FALSE
pectin$train <-TRUE
pectin$train[sample(1:length(pectin$DE),23)]<- FALSE
pectin_TRAIN <- pectin[pectin$train==TRUE,]
pectin_TEST <- pectin[pectin$train==FALSE,]
Mpcr<-pcr(DE~NIR,ncomp =30,data=pectin_TRAIN,validation="LOO",scale=T,jackknife=T )
par(mfrow=c(2,2))
plot(Mpcr,labels=rownames(pectin),which="validation")
plot(Mpcr,"validation",estimate=c("train","CV"),legendpos="topright")
plot(Mpcr,"validation",estimate=c("train","CV"),val.type="R2",legendpos="bottomright")
pls::scoreplot(Mpcr,labels=rownames(pectin))
Mpls<-plsr(DE~NIR,ncomp=60,data=pectin_TRAIN,validation="LOO",scale=T,jackknife=T)
par(mfrow=c(2,2))
Mpls<-plsr(DE~NIR,ncomp=30,data=pectin_TRAIN,validation="LOO",scale=T,jackknife=T)
par(mfrow=c(2,2))
plot(Mpls,labels=rownames(pectin),which="validation")
plot(Mpls,"validation",estimate=c("train","CV"),legendpos="topright")
plot(Mpls,"validation",estimate=c("train","CV"),val.type="R2",legendpos="bottomright")
pls::scoreplot(Mpls,labels=rownames(pectin))
par(mfrow=c(2, 2))
coefplot(Mpcr, ncomp = 1, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis =0.5, main = "DE,PCR with 1")
coefplot(Mpcr, ncomp = 2, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis = 0.5, main = "DE,PCR with 2")
coefplot(Mpcr, ncomp = 20, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis = 0.5, main = "DE,PCR with 3")
coefplot(Mpls, ncomp = 8, se.whiskers = TRUE, labels = prednames(Mpls),
cex.axis = 0.5, main = "DE,PLS with 2")
coefplot(Mpcr, ncomp = 30, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis = 0.5, main = "DE,PCR with 3")
coefplot(Mpls, ncomp = 10, se.whiskers = TRUE, labels = prednames(Mpls),
cex.axis = 0.5, main = "DE,PLS with 2")
coefplot(Mpcr, ncomp = 3, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis = 0.5, main = "DE,PCR with 3")
coefplot(Mpcr, ncomp = 2, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis = 0.5, main = "DE,PCR with 2")
coefplot(Mpcr, ncomp = 5, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis = 0.5, main = "DE,PCR with 3")
coefplot(Mpcr, ncomp = 15, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis = 0.5, main = "DE,PCR with 3")
coefplot(Mpls, ncomp = 3, se.whiskers = TRUE, labels = prednames(Mpls),
cex.axis = 0.5, main = "DE,PLS with 2")
coefplot(Mpls, ncomp = 2, se.whiskers = TRUE, labels = prednames(Mpls),
cex.axis = 0.5, main = "DE,PLS with 2")
coefplot(Mpls, ncomp = 1, se.whiskers = TRUE, labels = prednames(Mpls),
cex.axis = 0.5, main = "DE,PLS with 2")
coefplot(Mpcr, ncomp = 15, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis = 0.5, main = "DE,PCR with 3")
par(mfrow=c(2,2))
plot(Mpcr,labels=rownames(pectin),which="validation")
plot(Mpcr,"validation",estimate=c("train","CV"),legendpos="topright")
plot(Mpcr,"validation",estimate=c("train","CV"),val.type="R2",legendpos="bottomright")
pls::scoreplot(Mpcr,labels=rownames(pectin))
coefplot(Mpcr, ncomp = 20, se.whiskers = TRUE, labels = prednames(Mpcr),
coefplot(Mpls, ncomp = 10, se.whiskers = TRUE, labels = prednames(Mpls),
cex.axis = 0.5, main = "DE,PLS with 2")
coefplot(Mpcr, ncomp = 20, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis = 0.5, main = "DE,PCR with 3")
coefplot(Mpls, ncomp = 10, se.whiskers = TRUE, labels = prednames(Mpls),
cex.axis = 0.5, main = "DE,PLS with 2")
Seg_pls<-plsr(DE~NIR,ncomp=30,data=pectin,validation="CV",segments=10,segment.type=c("random"),scale=T,jackknife=T)
par(mfrow=c(2,2))
plot(Seg_pls,labels=rownames(pectin),which="validation")
plot(Seg_pls,"validation",estimate=c("train","CV"),legendpos="topright")
plot(Seg_pls,"validation",estimate=c("train","CV"),val.type="R2",legendpos="bottomright")
pls::scoreplot(Seg_pls,comp=1:3,labels=rownames(pectin))
par(mfrow=c(3,3))
pls::loadingplot(Seg_pls, comps = 1, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 2, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 3, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 4, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 5, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 6, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 7, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 8, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 10, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 15, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 11, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 12, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 9, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 8, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 7, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 8, scatter = F, labels = prednames(Seg_pls),)
Mpls3<-plsr(DE~NIR,ncomp=10,data=pectin,validation="LOO",scale=TRUE,jackknife=TRUE)
par(mfrow=c(2, 2))
obsfit<-predplot(Mpls3,labels=rownames(pectin),which="validation")
Residuals<-obsfit[,1]-obsfit[,2]
abline(lm(obsfit[,2]~obsfit[,1]),col=2)
plot(obsfit[,2], abs(Residuals), type = "n", xlab = "Fitted", ylab = "Residuals")
text(obsfit[,2], Residuals, labels = rownames(pectin))
qqnorm(Residuals)
Xf <- scores(Mpls3)
H <- Xf %*% solve(t(Xf) %*% Xf) %*% t(Xf)
leverage <- diag(H)
plot(leverage, abs(Residuals), type = "n", main = "3")
text(leverage, abs(Residuals), labels = rownames(pectin))
par(mfrow=c(2, 2))
obsfit<-predplot(Mpls3,labels=rownames(pectin),which="validation")
abline(lm(obsfit[,2]~obsfit[,1]),col=2)
plot(Mpls3, "validation", estimate = c("train", "CV"), val.type = "R2",
legendpos = "bottomright")
coefplot(Mpls3, se.whiskers = TRUE, labels = prednames(Mpls3), cex.axis = 0.5)
biplot(Mpls3,var.axes = TRUE)
preds <- predict(Mpls3, newdata =pectin, ncomp = 10)
Mpcr<-pcr(DE~NIR,ncomp =30,data=pectin_TRAIN,validation="LOO",scale=T,jackknife=T )
par(mfrow=c(2,2))
plot(Mpcr,labels=rownames(pectin_TRAIN),which="validation")
plot(Mpcr,"validation",estimate=c("train","CV"),legendpos="topright")
plot(Mpcr,"validation",estimate=c("train","CV"),val.type="R2",legendpos="bottomright")
pls::scoreplot(Mpcr,labels=rownames(pectin))
##2.using pls1 (without segments)####
Mpls<-plsr(DE~NIR,ncomp=30,data=pectin_TRAIN,validation="LOO",scale=T,jackknife=T)
par(mfrow=c(2,2))
plot(Mpls,labels=rownames(pectin_TRAIN),which="validation")
plot(Mpls,"validation",estimate=c("train","CV"),legendpos="topright")
plot(Mpls,"validation",estimate=c("train","CV"),val.type="R2",legendpos="bottomright")
pls::scoreplot(Mpls,labels=rownames(pectin_TRAIN))
par(mfrow=c(2, 2))
coefplot(Mpcr, ncomp = 1, se.whiskers = TRUE, labels = prednames(pectin_TRAIN),
cex.axis =0.5, main = "DE,PCR with 1")
coefplot(Mpcr, ncomp = 2, se.whiskers = TRUE, labels = prednames(pectin_TRAIN),
cex.axis = 0.5, main = "DE,PCR with 2")
coefplot(Mpcr, ncomp = 20, se.whiskers = TRUE, labels = prednames(pectin_TRAIN),
cex.axis = 0.5, main = "DE,PCR with 3")
coefplot(Mpls, ncomp = 10, se.whiskers = TRUE, labels = prednames(pectin_TRAIN),
cex.axis = 0.5, main = "DE,PLS with 2")
Seg_pls<-plsr(DE~NIR,ncomp=30,data=pectin_TRAIN,validation="CV",segments=10,segment.type=c("random"),scale=T,jackknife=T)
par(mfrow=c(2,2))
plot(Seg_pls,labels=rownames(pectin_TRAIN),which="validation")
plot(Seg_pls,"validation",estimate=c("train","CV"),legendpos="topright")
plot(Seg_pls,"validation",estimate=c("train","CV"),val.type="R2",legendpos="bottomright")
pls::scoreplot(Seg_pls,comp=1:3,labels=rownames(pectin))
par(mfrow=c(3,3))
pls::loadingplot(Seg_pls, comps = 1, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 2, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 4, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 6, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 8, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 5, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 7, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 10, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 3, scatter = F, labels = prednames(Seg_pls),)
Mpls3<-plsr(DE~NIR,ncomp=10,data=pectin_TRAIN,validation="LOO",scale=TRUE,jackknife=TRUE)
#4. VALIDATE:predicted and  residual.
par(mfrow=c(2, 2))
obsfit<-predplot(Mpls3,labels=rownames(pectin_TRAIN),which="validation")
Residuals<-obsfit[,1]-obsfit[,2]
abline(lm(obsfit[,2]~obsfit[,1]),col=2)
plot(obsfit[,2], abs(Residuals), type = "n", xlab = "Fitted", ylab = "Residuals")
text(obsfit[,2], Residuals, labels = rownames(pectin))
qqnorm(Residuals)
text(obsfit[,2], Residuals, labels = rownames(pectin_TRAIN))
qqnorm(Residuals)
Xf <- scores(Mpls3)
H <- Xf %*% solve(t(Xf) %*% Xf) %*% t(Xf)
leverage <- diag(H)
plot(leverage, abs(Residuals), type = "n", main = "3")
text(leverage, abs(Residuals), labels = rownames(pectin))
Xf <- scores(Mpls3)
H <- Xf %*% solve(t(Xf) %*% Xf) %*% t(Xf)
leverage <- diag(H)
plot(leverage, abs(Residuals), type = "n", main = "3")
text(leverage, abs(Residuals), labels = rownames(pectin_TRAIN))
par(mfrow=c(2, 2))
obsfit<-predplot(Mpls3,labels=rownames(pectin_TRAIN),which="validation")
abline(lm(obsfit[,2]~obsfit[,1]),col=2)
plot(Mpls3, "validation", estimate = c("train", "CV"), val.type = "R2",
legendpos = "bottomright")
coefplot(Mpls3, se.whiskers = TRUE, labels = prednames(Mpls3), cex.axis = 0.5)
biplot(Mpls3,var.axes = TRUE)
preds <- predict(Mpls3, newdata =pectin_TEST, ncomp = 10)
plot(pectin$DE, preds)
plot(pectin$DE, preds)
preds <- predict(Mpls3, newdata =pectin_TEST, ncomp = 10)
plot(pectin_TEST$DE, preds)
rmsep<-sqrt(mean(pectin_TEST$DE-preds)^2)
rmsep
preds <- predict(Mpls3, newdata =pectin_TEST, ncomp = 3)
plot(pectin_TEST$DE, preds)
rmsep<-sqrt(mean(pectin_TEST$DE-preds)^2)
rmsep
preds <- predict(Mpls3, newdata =pectin_TEST, ncomp = 13)
plot(pectin_TEST$DE, preds)
preds <- predict(Mpls3, newdata =pectin_TEST, ncomp = 15)
plot(pectin_TEST$DE, preds)
rmsep<-sqrt(mean(pectin_TEST$DE-preds)^2)
rmsep
preds <- predict(Mpls3, newdata =pectin_TEST, ncomp = 9)
plot(pectin_TEST$DE, preds)
rmsep<-sqrt(mean(pectin_TEST$DE-preds)^2)
rmsep
preds <- predict(Mpls3, newdata =pectin_TEST, ncomp = 8)
plot(pectin_TEST$DE, preds)
rmsep<-sqrt(mean(pectin_TEST$DE-preds)^2)
rmsep
preds <- predict(Mpls3, newdata =pectin_TEST, ncomp = 7)
plot(pectin_TEST$DE, preds)
rmsep<-sqrt(mean(pectin_TEST$DE-preds)^2)
rmsep
preds <- predict(Mpls3, newdata =pectin_TEST, ncomp = 11)
plot(pectin_TEST$DE, preds)
rmsep<-sqrt(mean(pectin_TEST$DE-preds)^2)
rmsep
preds <- predict(Mpls3, newdata =pectin_TEST, ncomp = 3)
plot(pectin_TEST$DE, preds)
rmsep<-sqrt(mean(pectin_TEST$DE-preds)^2)
# 3comp
rmsep
pls::loadingplot(Seg_pls, comps = 9, scatter = F, labels = prednames(Seg_pls),)
pls::scoreplot(Seg_pls,comp=1:3,labels=rownames(pectin))
par(mfrow=c(3,3))
pls::loadingplot(Seg_pls, comps = 1, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 2, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 3, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 5, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 7, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 8, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 6, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 4, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 9, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 1, scatter = F, labels = prednames(Seg_pls),)
lines(0,0)
?line
ablines(0,0)
ablines(pectin_TRAIN,0)
ablines(pectin_TRAIN[,],0)
summary(pectin)
line(0:pectin_TRAIN$X10160,0)
line(pectin_TRAIN$X5531:pectin_TRAIN$X10160,0)
preds <- predict(Mpls3, newdata =pectin_TEST, ncomp = 3)
plot(pectin_TEST$DE, preds)
rmsep<-sqrt(mean(pectin_TEST$DE-preds)^2)
# 3comp .84659
rmsep
plot(pectin_TEST$DE, preds)
rmsep<-sqrt(mean(pectin_TEST$DE-preds)^2)
rmsep
preds <- predict(Mpls3, newdata =pectin_TEST, ncomp = 9)
plot(pectin_TEST$DE, preds)
setwd("C:/Users/RAN/OneDrive/Documents/BioDataAnalysis/Data/PLSR")
preds <- predict(Mpls3, newdata =pectin, ncomp = 10)
rm(list=ls())
pectin <- read.table("Pectin_and_DE.txt", header = TRUE,sep = ";", dec = ",")
View(pectin)
dim(pectin) #70x1040
#1. Explore the data
##2. Model the data, first PCR####
pectin$X<-as.matrix(pectin[,2:1040])
n=ncol(pectin$X)
Mpcr<-pcr(DE~X,ncomp =60,data=pectin,validation="LOO",scale=T,jackknife=T )
par(mfrow=c(2,2))
plot(Mpcr,labels=rownames(pectin),which="validation")
plot(Mpcr,"validation",estimate=c("train","CV"),legendpos="topright")
plot(Mpcr,"validation",estimate=c("train","CV"),val.type="R2",legendpos="bottomright")
pls::scoreplot(Mpcr,labels=rownames(pectin))
#   using pls1 (without segments)
Mpls<-plsr(DE~X,ncomp=60,data=pectin,validation="LOO",scale=T,jackknife=T)
par(mfrow=c(2,2))
plot(Mpls,labels=rownames(pectin),which="validation")
plot(Mpls,"validation",estimate=c("train","CV"),legendpos="topright")
plot(Mpls,"validation",estimate=c("train","CV"),val.type="R2",legendpos="bottomright")
pls::scoreplot(Mpls,labels=rownames(pectin))
#   Plot RMSE AND coefficients with uncertainty from Jacknife:(PCR),coMpare RMSEP FOR CHOOSING A NO. OF COMP,
par(mfrow=c(2, 2))
coefplot(Mpcr, ncomp = 1, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis =0.5, main = "DE,PCR with 1")
coefplot(Mpcr, ncomp = 2, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis = 0.5, main = "DE,PCR with 2")
coefplot(Mpcr, ncomp = 15, se.whiskers = TRUE, labels = prednames(Mpcr),
cex.axis = 0.5, main = "DE,PCR with 3")
coefplot(Mpls, ncomp = 10, se.whiskers = TRUE, labels = prednames(Mpls),
cex.axis = 0.5, main = "DE,PLS with 2")
##   using pls1 (with segments)
Seg_pls<-plsr(DE~X,ncomp=60,data=pectin,validation="CV",segments=10,segment.type=c("random"),scale=T,jackknife=T)
par(mfrow=c(2,2))
plot(Seg_pls,labels=rownames(pectin),which="validation")
plot(Seg_pls,"validation",estimate=c("train","CV"),legendpos="topright")
plot(Seg_pls,"validation",estimate=c("train","CV"),val.type="R2",legendpos="bottomright")
#   SCORE, Loadings, one by one
pls::scoreplot(Seg_pls,comp=1:3,labels=rownames(pectin))
par(mfrow=c(3,3))
pls::loadingplot(Seg_pls, comps = 1, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 2, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 3, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 4, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 5, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 6, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 7, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 8, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 9, scatter = F, labels = prednames(Seg_pls),)
##3. USING A PROPER NO.OF COMPFOR PLSR##
Mpls3<-plsr(DE~X,ncomp=10,data=pectin,validation="LOO",scale=TRUE,jackknife=TRUE)
#4. VALIDATE:predicted and  residual.
par(mfrow=c(2, 2))
obsfit<-predplot(Mpls3,labels=rownames(pectin),which="validation")
Residuals<-obsfit[,1]-obsfit[,2]
abline(lm(obsfit[,2]~obsfit[,1]),col=2)
plot(obsfit[,2], abs(Residuals), type = "n", xlab = "Fitted", ylab = "Residuals")
text(obsfit[,2], Residuals, labels = rownames(pectin))
qqnorm(Residuals)
#leverage of X and Hat matrix
Xf <- scores(Mpls3)
H <- Xf %*% solve(t(Xf) %*% Xf) %*% t(Xf)
leverage <- diag(H)
plot(leverage, abs(Residuals), type = "n", main = "3")
text(leverage, abs(Residuals), labels = rownames(pectin))
##4) "interpret/conclude"####
# Plot coefficients with uncertainty from Jacknife:
par(mfrow=c(2, 2))
obsfit<-predplot(Mpls3,labels=rownames(pectin),which="validation")
abline(lm(obsfit[,2]~obsfit[,1]),col=2)
plot(Mpls3, "validation", estimate = c("train", "CV"), val.type = "R2",
legendpos = "bottomright")
coefplot(Mpls3, se.whiskers = TRUE, labels = prednames(Mpls3), cex.axis = 0.5)
biplot(Mpls3,var.axes = TRUE)
preds <- predict(Mpls3, newdata =pectin, ncomp = 10)
plot(pectin$DE, preds)
rmsep<-sqrt(mean(pectin$DE-preds)^2)
rmsep
preds <- predict(Mpls3, newdata =pectin, ncomp = 9)
plot(pectin$DE, preds)
rmsep<-sqrt(mean(pectin$DE-preds)^2)
rmsep
preds <- predict(Mpls3, newdata =pectin, ncomp = 11)
plot(pectin$DE, preds)
rmsep<-sqrt(mean(pectin$DE-preds)^2)
rmsep
preds <- predict(Mpls3, newdata =pectin, ncomp = 8)
plot(pectin$DE, preds)
rmsep<-sqrt(mean(pectin$DE-preds)^2)
rmsep
preds <- predict(Mpls3, newdata =pectin, ncomp = 7)
plot(pectin$DE, preds)
rmsep<-sqrt(mean(pectin$DE-preds)^2)
rmsep
pls::loadingplot(Seg_pls, comps = 8, scatter = F, labels = prednames(Seg_pls),)
pls::loadingplot(Seg_pls, comps = 9, scatter = F, labels = prednames(Seg_pls),)
Mpls3<-plsr(DE~X,ncomp=8,data=pectin,validation="LOO",scale=TRUE,jackknife=TRUE)
par(mfrow=c(2, 2))
obsfit<-predplot(Mpls3,labels=rownames(pectin),which="validation")
Residuals<-obsfit[,1]-obsfit[,2]
abline(lm(obsfit[,2]~obsfit[,1]),col=2)
plot(obsfit[,2], abs(Residuals), type = "n", xlab = "Fitted", ylab = "Residuals")
text(obsfit[,2], Residuals, labels = rownames(pectin))
qqnorm(Residuals)
Xf <- scores(Mpls3)
H <- Xf %*% solve(t(Xf) %*% Xf) %*% t(Xf)
leverage <- diag(H)
plot(leverage, abs(Residuals), type = "n", main = "3")
text(leverage, abs(Residuals), labels = rownames(pectin))
par(mfrow=c(2, 2))
obsfit<-predplot(Mpls3,labels=rownames(pectin),which="validation")
abline(lm(obsfit[,2]~obsfit[,1]),col=2)
plot(Mpls3, "validation", estimate = c("train", "CV"), val.type = "R2",
legendpos = "bottomright")
coefplot(Mpls3, se.whiskers = TRUE, labels = prednames(Mpls3), cex.axis = 0.5)
biplot(Mpls3,var.axes = TRUE)
Mpls3<-plsr(DE~NIR,ncomp=9,data=pectin_TRAIN,validation="LOO",scale=TRUE,jackknife=TRUE)
#4. VALIDATE:predicted and  residual.
par(mfrow=c(2, 2))
obsfit<-predplot(Mpls3,labels=rownames(pectin_TRAIN),which="validation")
Residuals<-obsfit[,1]-obsfit[,2]
abline(lm(obsfit[,2]~obsfit[,1]),col=2)
plot(obsfit[,2], abs(Residuals), type = "n", xlab = "Fitted", ylab = "Residuals")
text(obsfit[,2], Residuals, labels = rownames(pectin_TRAIN))
qqnorm(Residuals)
setwd("C:/Users/RAN/OneDrive/Documents/BioDataAnalysis/Data/PLSR")
