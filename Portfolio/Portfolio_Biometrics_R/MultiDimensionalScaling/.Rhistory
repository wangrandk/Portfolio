wine_train$X <- as.matrix(wine_train[, 3:15])
mod_pls <- plsr(Y ~ X, ncomp = 4, data = wine_train,
validation="LOO", scale = TRUE, jackknife = TRUE)
wine_train$X
na.omit(wine_train$X)
mod_pls <- plsr(Y ~ X, ncomp = 4, data = wine_train,
validation="LOO", scale = TRUE, jackknife = TRUE)
which(!is.finite(wine_train$X))
wine_train
wine_train$X
mod_pls <- plsr(Y ~ X, ncomp = 4, data = wine_train,
validation="LOO", scale = TRUE, jackknife = TRUE)
library(pls)
mod_pls <- plsr(Y ~X , ncomp = 4, data =wine_train,
validation = "LOO", scale = TRUE, jackknife = TRUE)
wine_train$Y <- -1
wine_train$Y[wine_train$Wine == "Barbera"] <- 1
table(wine_train$Y)
wine_train$X <- as.matrix(wine_train[, 3:15])
mod_pls <- plsr(Y ~X , ncomp = 4, data =wine_train,
validation = "LOO", scale = TRUE, jackknife = TRUE)
K=3
wine_train$Y=matrix(rep(1,length(wine_train[,1])*K),ncol=K)# matrix 89 by 3
wine_train$Y[wine_train$Wine!="c",1]=-1 #if elements in wine_train$Wine is not "c",then it is -1 in the  1st column of wine_train$Y .
wine_train$Y[wine_train$Wine!="s",2]=-1
wine_train$Y[wine_train$Wine!="v",3]=-1
wine_train$X <- as.matrix(wine_train[, 3:15])
set.seed(4897)
train <- sample(1:178, 178/2)
test <- (1:178)[-train]
wine_train <- wine[train,]
wine_test <- wine[test,]
# Distribution in three classes in training data:
table(wine_train$Wine)
table(wine_test$Wine)
K=3
wine_train$Y=matrix(rep(1,length(wine_train[,1])*K),ncol=K)# matrix 89 by 3
wine_train$Y[wine_train$Wine!="c",1]=-1 #if elements in wine_train$Wine is not "c",then it is -1 in the  1st column of wine_train$Y .
wine_train$Y[wine_train$Wine!="s",2]=-1
wine_train$Y[wine_train$Wine!="v",3]=-1
wine_train$Y
table(wine_train$Y)
wine_train$Y=matrix(rep(1,length(wine_train[,1])*K),ncol=K)# matrix 89 by 3
wine_train$Y
wine_train$Y[wine_train$Wine!="c",1]=-1 #if elements in wine_train$Wine is not "c",then it is -1 in the  1st column of wine_train$Y .
wine_train$Y
wine_train$Wine
wine_train$Y[wine_train$Wine =="c",1]=-1 #if elements in wine_train$Wine is not "c",then it is -1 in the  1st column of wine_train$Y .
wine_train$Y
K=3
wine_train$Y=matrix(rep(1,length(wine_train[,1])*K),ncol=K)# matrix 89 by 3
wine_train$Y[wine_train$Wine!="Barbera",1]=-1 #if elements in wine_train$Wine is not "c",then it is -1 in the  1st column of wine_train$Y .
wine_train$Y[wine_train$Wine!="Barolo",2]=-1
wine_train$Y[wine_train$Wine!="Grigno",3]=-1
wine_train$Y
wine_train$X <- as.matrix(wine_train[, 3:15])
table(wine_train$Y)
mod_pls <- plsr(Y ~ X, ncomp = 4, data = wine_train,
validation="LOO", scale = TRUE, jackknife = TRUE)
par(mfrow=c(1, 1))
pls::scoreplot(mod_pls, labels = wine_train$Wine,col=as.numeric(wine_train$Wine))
plot(mod_pls, labels = rownames(wine_train), which = "validation")
plot(mod_pls, "validation", estimate = c("train", "CV"),
legendpos = "topright")
plot(mod_pls, "validation", estimate = c("train", "CV"),
val.type = "R2", legendpos = "bottomright")
# Predictions from PLS need to be transformed to actual classifications:
preds <- array(dim = c(length(wine_train[, 1]), 4))
for (i in 1:4) preds[,i]<- apply(predict(mod_pls, ncomp = i), 1, which.max)
preds2 <- array(dim = c(length(wine_train[, 1]), 4))
preds2[preds==1] <- "c"
preds2[preds==2] <- "s"
preds2[preds==3] <- "v"
for (i in 1:4) {
ct <- table(wine_train$Wine, preds2[, i])
CV_error <- 1 - sum(diag(prop.table(ct)))
print(CV_error)
}
preds2
preds <- array(dim = c(length(wine_train[, 1]), 4))
preds
set.seed(4897)
train <- sample(1:178, 178/2)
test <- (1:178)[-train]
wine_train <- wine[train,]
wine_test <- wine[test,]
# Distribution in three classes in training data:
table(wine_train$Wine)
table(wine_test$Wine)
preds <- array(dim = c(length(wine_train[, 1]), 4))
for (i in 1:4) preds[,i]<- apply(predict(mod_pls, ncomp = i), 1, which.max)
preds2 <- array(dim = c(length(wine_train[, 1]), 4))
preds2[preds==1] <- "c"
preds2[preds==2] <- "s"
preds2[preds==3] <- "v"
# Look at the results from each of the components:
for (i in 1:4) {
ct <- table(wine_train$Wine, preds2[, i])
CV_error <- 1 - sum(diag(prop.table(ct)))
print(CV_error)
}
preds
mod_pls <- plsr(Y ~ X, ncomp = 2, data = wine_train,
validation="LOO", scale = TRUE, jackknife = TRUE)
K=3
wine_train$Y=matrix(rep(1,length(wine_train[,1])*K),ncol=K)# matrix 89 by 3
wine_train$Y[wine_train$Wine!="Barbera",1]=-1 #if elements in wine_train$Wine is not "c",then it is -1 in the  1st column of wine_train$Y .
wine_train$Y[wine_train$Wine!="Barolo",2]=-1
wine_train$Y[wine_train$Wine!="Grigno",3]=-1
wine_train$X <- as.matrix(wine_train[, 3:15])
table(wine_train$Y)
which(!is.finite(wine_train$X))
mod_pls <- plsr(Y ~ X, ncomp = 2, data = wine_train,
validation="LOO", scale = TRUE, jackknife = TRUE)
# Initial set of plots:
par(mfrow=c(1, 1))
pls::scoreplot(mod_pls, labels = wine_train$Wine,col=as.numeric(wine_train$Wine))
plot(mod_pls, labels = rownames(wine_train), which = "validation")
plot(mod_pls, "validation", estimate = c("train", "CV"),
legendpos = "topright")
plot(mod_pls, "validation", estimate = c("train", "CV"),
val.type = "R2", legendpos = "bottomright")
library(randomForest)
obs = 2000
vars = 6
X = data.frame(replicate(vars,rnorm(obs,mean=0,sd=1)))
hidden.function = function(x,SNR=4) {
ysignal <<- with(x, .5 * X1^2 + sin(X2*pi) + X3 * X4) #y = x1^2 + sin(x2) + x3 * x4
ynoise = rnorm(dim(x)[1],mean=0,sd=sd(ysignal)/SNR)
cat("actucal signal to noise ratio, SNR: nn", round(sd(ysignal)/sd(ynoise),2))
y = ysignal + ynoise
}
y = hidden.function(X)
#scatter plot of X y relations
plot(data.frame(y,X[,1:4]),col="#00004520")
#no noteworthy linear relationship
print(cor(X,y))
#RF is the forest_object, randomForest is the algorithm, X & y the training data
RF = randomForest(x=X,y=y,
importance=TRUE, #extra diagnostics
keep.inbag=TRUE, #track of bootstrap process
ntree=500, #how many trees
replace=FALSE) #bootstrap with replacement?
print(RF)
rm(list=ls())
simpledat = read.phyDat("Simple.txt", type="DNA", format="fasta")
setwd("C:/Users/RAN/OneDrive/Documents/BioDataAnalysis/Data/Cluster")
rm(list=ls())
simpledat = read.phyDat("Simple.txt", type="DNA", format="fasta")
View(simpledat)
simpledat = read.phyDat("Simple.txt", type="DNA", format="fasta")
setwd("C:/Users/RAN/OneDrive/Documents/BioDataAnalysis/Data/Cluster")
simpledat = read.phyDat("Simple.txt", type="DNA", format="fasta")
simpledat = read.txt("Simple.txt", type="DNA", format="fasta")
simpledat = read.table("Simple.txt", type="DNA", format="fasta")
install.packages("ape")
install.packages("phangorn")
library(ape)
library(phangorn)
install.packages("phangorn")
library(ape)
library(phangorn)
library(ape)
library(phangorn)
simpledat = read.phyDat("Simple.txt", type="DNA", format="fasta")
View(simpledat)
dm = dist.hamming(simpledat, ratio=FALSE)
print(dm)
table(simpledat)
simpletree = NJ(dm) #Neighbor-Joining
plot(simpletree, type="unrooted", rotate.tree=90, lab4ut="axial")
print(simpletree$edge.length)
brlens = as.character(simpletree$edge.length)
edgelabels(brlens, bg="white", frame="circle")
pol21 = read.phyDat("pol21_aligned.txt", type="AA", format="fasta")
dm = dist.hamming(pol21, exclude="pairwise")
library(ChemometricsWithR)
data(wines)
subset <- sample(nrow(wines), 20)
wines.dist <- dist(wines[subset,])
wines.hcsingle <- hclust(wines.dist, method = "single")
plot(wines.hcsingle, labels = vintages[subset])
library(ape)
plot(as.phylo(wines.hcsingle), type = "fan", cex = 1)
wines.hccomplete <- hclust(wines.dist, method = "complete")
plot(wines.hccomplete, labels = vintages[subset])
wines.hcward <- hclust(wines.dist, method="ward.D")
plot(wines.hcward,labels = vintages[subset]) # display dendogram
plot(wines.hccomplete, labels = vintages[subset])
wines.hcward <- hclust(wines.dist, method="ward.D")
plot(wines.hcward,labels = vintages[subset]) # display dendogram
groups <- cutree(wines.hcward, k=c(3,5)) # cut tree into 5 clusters
ct<-table(grp3 = groups[,"3"], grp5 = groups[,"5"])
diag(prop.table(ct, 1))
rect.hclust(wines.hcward, k=5, border="red")
wines.cl.single <- cutree(wines.hcsingle, h = 80)
plot(wines.cl.single)
table(wines.cl.single, vintages[subset])
wines.dist <- dist(wines)
wines.hcsingle <- hclust(wines.dist, method = "single")
wines.dist <- dist(wines)
wines.hcsingle <- hclust(wines.dist, method = "single")
table(vintages, cutree(wines.hcsingle, k = 3))
wines.hcaverage <- hclust(wines.dist, method = "average")
table(vintages, cutree(wines.hcaverage, k = 3))
wines.hccomplete <- hclust(wines.dist, method = "complete")
table(vintages, cutree(wines.hccomplete, k = 3))
library(cluster)
wines.agness <- agnes(wines.dist, method = "single",metric = "manhattan")
wines.hcsingle <- hclust(wines.dist, method = "single")
table(vintages, cutree(wines.hcsingle, k = 3))
wines.hcaverage <- hclust(wines.dist, method = "average")
table(vintages, cutree(wines.hcaverage, k = 3))
wines.hccomplete <- hclust(wines.dist, method = "complete")
table(vintages, cutree(wines.hccomplete, k = 3))
library(cluster)
wines.agness <- agnes(wines.dist, method = "single",metric = "manhattan")
wines.agnesa <- agnes(wines.dist, method = "average")
wines.agnesc <- agnes(wines.dist, method = "complete")
cbind(wines.agness$ac, wines.agnesa$ac, wines.agnesc$ac)
wines.agness
plot(wines.agness, nmax = 150,labels = vintages[subset]) # ac gives indecation of h,
plot(wines.agness, nmax = 150,labels = vintages[subset]) # ac gives indecation of h,
wines.agness <- agnes(wines.dist, method = "single")
plot(wines.agness, nmax = 150,labels = vintages[subset]) # ac gives indecation of h,
wines.dist <- dist(wines)
wines.dist
plot(wines.agness, nmax = 150,labels = vintages[subset]) # ac gives indecation of h,
wines.agness <- agnes(wines.dist, method = "single")
plot(wines.agness, nmax = 150,labels = vintages[subset]) # ac gives indecation of h,
c1<-cor(wines.dist, cophenetic(wines.hcsingle)) # how nice the dendrogram fits the original distance.
c2<-cor(wines.dist, cophenetic(wines.hcaverage))
c3<-cor(wines.dist, cophenetic(wines.hccomplete))
c(c1,c2,c3)
cophenetic(wines.hcsingle)
c(c1,c2,c3)
ibrary(ChemometricsWithR)
data(wines)
## Distance matrix for a subset of data:
subset <- sample(nrow(wines), 20)
wines.dist <- dist(wines[subset,])
## Single linkage clustering:
wines.hcsingle <- hclust(wines.dist, method = "single")
plot(wines.hcsingle, labels = vintages[subset])
## Creates plot of phylogenetic tree in a fan form.
library(ape)
plot(as.phylo(wines.hcsingle), type = "fan", cex = 1)
## Complete Linkage clustering:
wines.hccomplete <- hclust(wines.dist, method = "complete")
plot(wines.hccomplete, labels = vintages[subset])
# Ward Hierarchical Clustering
wines.hcward <- hclust(wines.dist, method="ward.D")
plot(wines.hcward,labels = vintages[subset]) # display dendogram
groups <- cutree(wines.hcward, k=c(3,5)) # cut tree into 5 clusters
# draw dendogram with red borders around the 5 clusters
ct<-table(grp3 = groups[,"3"], grp5 = groups[,"5"])
diag(prop.table(ct, 1))
rect.hclust(wines.hcward, k=5, border="red")
## Clustering, cf. chapter in book:
wines.cl.single <- cutree(wines.hcsingle, h = 80)
plot(wines.cl.single)
table(wines.cl.single, vintages[subset])
wines.dist <- dist(wines)
wines.hcsingle <- hclust(wines.dist, method = "single")
table(vintages, cutree(wines.hcsingle, k = 3))
wines.hcaverage <- hclust(wines.dist, method = "average")
table(vintages, cutree(wines.hcaverage, k = 3))
wines.hccomplete <- hclust(wines.dist, method = "complete")
table(vintages, cutree(wines.hccomplete, k = 3))
library(cluster)
wines.agness <- agnes(wines.dist, method = "single")
wines.agnesa <- agnes(wines.dist, method = "average")
wines.agnesc <- agnes(wines.dist, method = "complete")
cbind(wines.agness$ac, wines.agnesa$ac, wines.agnesc$ac)
library(ChemometricsWithR)
data(wines)
## Distance matrix for a subset of data:
subset <- sample(nrow(wines), 20)
wines.dist <- dist(wines[subset,])
## Single linkage clustering:
wines.hcsingle <- hclust(wines.dist, method = "single")
plot(wines.hcsingle, labels = vintages[subset])
## Creates plot of phylogenetic tree in a fan form.
library(ape)
plot(as.phylo(wines.hcsingle), type = "fan", cex = 1)
## Complete Linkage clustering:
wines.hccomplete <- hclust(wines.dist, method = "complete")
plot(wines.hccomplete, labels = vintages[subset])
# Ward Hierarchical Clustering
wines.hcward <- hclust(wines.dist, method="ward.D")
plot(wines.hcward,labels = vintages[subset]) # display dendogram
groups <- cutree(wines.hcward, k=c(3,5)) # cut tree into 5 clusters
# draw dendogram with red borders around the 5 clusters
ct<-table(grp3 = groups[,"3"], grp5 = groups[,"5"])
diag(prop.table(ct, 1))
rect.hclust(wines.hcward, k=5, border="red")
## Clustering, cf. chapter in book:
wines.cl.single <- cutree(wines.hcsingle, h = 80)
plot(wines.cl.single)
table(wines.cl.single, vintages[subset])
wines.dist <- dist(wines)
wines.hcsingle <- hclust(wines.dist, method = "single")
table(vintages, cutree(wines.hcsingle, k = 3))
wines.hcaverage <- hclust(wines.dist, method = "average")
table(vintages, cutree(wines.hcaverage, k = 3))
wines.hccomplete <- hclust(wines.dist, method = "complete")
table(vintages, cutree(wines.hccomplete, k = 3))
library(cluster)
wines.agness <- agnes(wines.dist, method = "single")
wines.agnesa <- agnes(wines.dist, method = "average")
wines.agnesc <- agnes(wines.dist, method = "complete")
cbind(wines.agness$ac, wines.agnesa$ac, wines.agnesc$ac) # agglomerative coeficient.
## Computing cophenetic correlation:
plot(wines.agness, nmax = 150,labels = vintages[subset]) # ac gives indecation of h,
rm(list=ls())
EU <- read.table("EU.txt", header = TRUE,sep = "", dec = ",")
EU = t(EU)
View(EU)
?dist
EU.dist<-dist(EU,method="chi-square")
EU.dist<-dist(EU,method="chisquare")
install.packages("analogue")
?distance
?oldDistance
library("analogue", lib.loc="~/R/win-library/3.2")
?distance
EU.dist<-distance(EU,method="chi.square")
library(cluster)
EU.agness <- agnes(EU.dist, method = "single")
EU.agnesa <- agnes(EU.dist, method = "average")
EU.agnesc <- agnes(EU.dist, method = "complete")
EU.hcaverage <- hclust(EU.dist, method = "average")
cbind(EU.agness$ac, EU.agnesa$ac, EU.agnesc$ac)
par(mfrow=c(1, 2))
plot(EU.hcaverage,labels = rownames(EU))
EU.hcaverage <- hclust(EU.dist, method = "average")
EU.hcaverage <- hclust(EU.dist, method = "average")
EU.dist<-dist(EU,method="euclidean")
library(cluster)
EU.agness <- agnes(EU.dist, method = "single")
EU.agnesa <- agnes(EU.dist, method = "average")
EU.agnesc <- agnes(EU.dist, method = "complete")
EU.hcaverage <- hclust(EU.dist, method = "average")
cbind(EU.agness$ac, EU.agnesa$ac, EU.agnesc$ac)
par(mfrow=c(1, 2))
plot(EU.hcaverage,labels = rownames(EU))
EU.cut<- cutree(EU.hcaverage, h = 3)
table(rownames(EU),EU.cut)
plot(EU.cut)
cor(EU.dist, cophenetic(EU.agness))
cor(EU.dist, cophenetic(EU.agnesa)) # fits best
cor(EU.dist, cophenetic(EU.agnesc))
EU.dist<-distance(EU,method="chi.square")
EU.dist<-distance(EU,method="chi.square",dist = FALSE)
EU.dist<-distance(EU,method="chi.square",dist = FALSE,weights = NULL,
R = NULL)
EU.dist<-oldDistance(EU,method="chi.square",dist = FALSE,weights = NULL,
EU.dist<-dist(EU,method="euclidean")
EU.dist<-dist(EU,method="euclidean")
rm(list=ls())
EU <- read.table("EU.txt", header = TRUE,sep = "", dec = ",")
EU = t(EU)
EU.dist<-dist(EU,method="euclidean")
EU.dist<-oldDistance(EU,method="chi.square",dist = FALSE,weights = NULL,
R = NULL)
rm(list=ls())
EU <- read.table("EU.txt", header = TRUE,sep = "", dec = ",")
EU = t(EU)
EU.dist<-oldDistance(EU,method="chi.square",dist = FALSE,weights = NULL,
R = NULL)
library(cluster)
EU.agness <- agnes(EU.dist, method = "single")
EU.agnesa <- agnes(EU.dist, method = "average")
EU.agnesc <- agnes(EU.dist, method = "complete")
EU.hcaverage <- hclust(EU.dist, method = "average")
cbind(EU.agness$ac, EU.agnesa$ac, EU.agnesc$ac)
par(mfrow=c(1, 2))
plot(EU.hcaverage,labels = rownames(EU))
par(mfrow=c(1, 2))
plot(EU.agnesa,labels = rownames(EU))
EU.cut<- cutree(EU.agnesa, h = 3)
par(mfrow=c(1, 2))
plot(EU.hcaverage,labels = rownames(EU))
EU.dist<-dist(EU,method="euclidean")
EU.agness <- agnes(EU.dist, method = "single")
EU.agnesa <- agnes(EU.dist, method = "average")
EU.agnesc <- agnes(EU.dist, method = "complete")
EU.hcaverage <- hclust(EU.dist, method = "average")
cbind(EU.agness$ac, EU.agnesa$ac, EU.agnesc$ac)
par(mfrow=c(1, 2))
plot(EU.hcaverage,labels = rownames(EU))
EU.cut<- cutree(EU.hcaverage, h = 3)
table(rownames(EU),EU.cut)
plot(EU.cut)
EU.cut<- cutree(EU.hcaverage, h = 5)
table(rownames(EU),EU.cut)
plot(EU.cut)
cor(EU.dist, cophenetic(EU.agness))
cor(EU.dist, cophenetic(EU.agnesa)) # fits best
cor(EU.dist, cophenetic(EU.agnesc))
plot(EU.hcaverage,labels = rownames(EU))
EU.cut<- cutree(EU.hcaverage, h = 5)
table(rownames(EU),EU.cut)
plot(EU.cut)
par(mfrow=c(1, 2))
plot(EU.agnesa,labels = rownames(EU))
library(ChemometricsWithR)
data(wines)
wines_scale<-scale(wines, center = F, scale = TRUE)
wines.dist <- dist(wines_scale)
wines.hcsingle <- hclust(wines.dist, method = "single")
table(vintages, cutree(wines.hcsingle, k = 3))
wines.hcaverage <- hclust(wines.dist, method = "average")
table(vintages, cutree(wines.hcaverage, k = 3))
wines.hccomplete <- hclust(wines.dist, method = "complete")
table(vintages, cutree(wines.hccomplete, k = 3))
library(cluster)
wines.agness <- agnes(wines.dist, method = "single")
wines.agnesa <- agnes(wines.dist, method = "average")
wines.agnesc <- agnes(wines.dist, method = "complete")
cbind(wines.agness$ac, wines.agnesa$ac, wines.agnesc$ac)
c1<-cor(wines.dist, cophenetic(wines.agness))
c2<-cor(wines.dist, cophenetic(wines.agnesa)) # fits best
c3<-cor(wines.dist, cophenetic(wines.agnesc))
c(c1,c2,c3) #0.4999069 0.7480003 0.6179819
par(mfrow=c(1, 2))
plot(wines.agnesa, nmax = 150,labels = vintages)
plot(wines.hcsingle,labels = vintages)
plot(wines.hcaverage,labels = vintages)
plot(wines.hccomplete,labels = vintages)
par(mfrow=c(1, 1))
plot(wines.agnesa, nmax = 150,labels = vintages)
plot(wines.hccomplete,labels = vintages)
par(mfrow=c(1, 1))
plot(wines.agnesa, nmax = 150,labels = vintages)
plot(wines.hcsingle,labels = vintages)
plot(wines.hcaverage,labels = vintages)
plot(wines.hcaverage,labels = vintages)
plot(wines.hcaverage,labels = vintages)
plot(wines.hccomplete,labels = vintages)
c(c1,c2,c3) #0.4999069 0.7480003 0.6179819
wines_scale<-scale(wines, center = T, scale = TRUE)
wines.dist <- dist(wines_scale)
wines.hcsingle <- hclust(wines.dist, method = "single")
table(vintages, cutree(wines.hcsingle, k = 3))
wines.hcaverage <- hclust(wines.dist, method = "average")
table(vintages, cutree(wines.hcaverage, k = 3))
wines.hccomplete <- hclust(wines.dist, method = "complete")
table(vintages, cutree(wines.hccomplete, k = 3))
library(cluster)
wines.agness <- agnes(wines.dist, method = "single")
wines.agnesa <- agnes(wines.dist, method = "average")
wines.agnesc <- agnes(wines.dist, method = "complete")
cbind(wines.agness$ac, wines.agnesa$ac, wines.agnesc$ac)
c1<-cor(wines.dist, cophenetic(wines.agness))
c2<-cor(wines.dist, cophenetic(wines.agnesa)) # fits best
c3<-cor(wines.dist, cophenetic(wines.agnesc))
c(c1,c2,c3) #0.4999069 0.7480003 0.6179819
plot(wines.agnesa, nmax = 150,labels = vintages)
plot(wines.hcsingle,labels = vintages)
plot(wines.hcaverage,labels = vintages)
plot(wines.hccomplete,labels = vintages)
data(wines)
wines<-t(wines)#examine the variables.
View(wines)
wines.dist <- dist(wines)
wines.hcsingle <- hclust(wines.dist, method = "single")
wines.hcaverage <- hclust(wines.dist, method = "average")
wines.hccomplete <- hclust(wines.dist, method = "complete")
library(cluster)
wines.agness <- agnes(wines.dist, method = "single")
wines.agnesa <- agnes(wines.dist, method = "average")
wines.agnesc <- agnes(wines.dist, method = "complete")
cbind(wines.agness$ac, wines.agnesa$ac, wines.agnesc$ac)
c1<-cor(wines.dist, cophenetic(wines.agness))
c2<-cor(wines.dist, cophenetic(wines.agnesa)) # fits best
c3<-cor(wines.dist, cophenetic(wines.agnesc))
c(c1,c2,c3) #0.4999069 0.7480003 0.6179819
par(mfrow=c(1, 2))
par(mfrow=c(1, 1))
plot(wines.agnesa, nmax = 150,labels = vintages)
plot(wines.hcaverage,labels = rownames(wines))
par(mfrow=c(1, 1))
plot(wines.agnesa, nmax = 150,labels = vintages)
plot(wines.hcsingle,labels = rownames(wines))
plot(wines.hcaverage,labels = rownames(wines))
plot(wines.hccomplete,labels = rownames(wines))
?cophenetic
setwd("C:/Users/RAN/OneDrive/Documents/BioDataAnalysis/Data/MultiDimensionalScaling")
rm(list=ls())
mydata<-read.table("flying.txt", fill = TRUE, header = T)
Sealand_dist <- as.dist(mydata)
fit <- cmdscale(Sealand_dist,eig=TRUE, k=2,x.ret = T)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric MDS", type="n")
text(x, y, labels = colnames(mydata), cex=.7)
library(MASS)
d <- as.dist(mydata)# euclidean distances between the rows
fit <- isoMDS(d, k=2) # k is the number of dim
# plot solution
x <- fit$points[,1]
y <- fit$points[,2]
win.metafile('NMS_flying.wmf')
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Nonmetric MDS", type="n")
text(x, y, labels = colnames(mydata), cex=.7)
dev.off()
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Nonmetric MDS", type="n")
text(x, y, labels = colnames(mydata), cex=.7)
