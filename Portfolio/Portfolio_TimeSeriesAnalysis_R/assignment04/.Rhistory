k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-X[,I-1] + k %*% (Y[,I-1] - C%*%X[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#pre
X[,I+1] <- A %*% X[,I,drop=FALSE] + mvrnorm(mu=rbind(0,0,0),sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I+1] %*% t(C) + mvrnorm(mu=rbind(0,0),sigma2) %*% rnorm(1)
}
X
X[,1] = cbind(0,0,0)
Y <- matrix(nrow=2,ncol=n)
Y[,1] <- C%*% X[,1]  + sqrt(rbind(2000^2,0.03^2))
y
Y
k = sigmaxx %*% t(C) %*% solve(sigmayy);
k
Y[,1] <- C%*% X[,1]  + sqrt(rbind(2000^2,0.03^2))
sigmaxx<-diag(c(1985,.43,.43))
#sigmaxx<-diag(c(0,0,0))
sigmayy<-C %*% sigmaxx %*% t(C) +sigma2
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
k
Y
Y <- cbind(r,theta)
Y
Y[1,]
k
sigmaxx
sigmaxx[4]
sigmaxx[2]
Y <- numeric(n)
Y[,1] <- C%*% X[,1]  + sqrt(rbind(2000^2,0.03^2))
Y <- cbind(r,theta)
Y[,1] <- C%*% X[,1]  + sqrt(rbind(2000^2,0.03^2))
Y <- numeric(n)
Y[,1] <- C%*% X[,1]  + sqrt(rbind(2000^2,0.03^2))
Y <- numeric(2,n)
Y[,1] <- C%*% X[,1]  + sqrt(rbind(2000^2,0.03^2))
Y <- cbind(r,theta)
Y <- numeric(2,n)
Y[,1] <- C%*% X[,1]  + sqrt(rbind(2000^2,0.03^2))
sigmayy[[1]]
sigmayy
for (I in 2:n){
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-X[,I-1] + k %*% (Y[I-1,] - C%*%X[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
}
Y <- cbind(r,theta)
for (I in 2:n){
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-X[,I-1] + k %*% (Y[I-1,] - C%*%X[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
}
X
X[,1] = cbind(mean(r),mean(theta),0)
X[,1] = cbind(mean(r),mean(theta),0)
Y <- matrix(nrow=2,ncol=n)
Y <- cbind(r,theta)
Y[,1] <- C%*% X[,1]  + sqrt(rbind(2000^2,0.03^2))
sigmaxx<-diag(c(1985,.43,.43))
#sigmaxx<-diag(c(0,0,0))
sigmayy<-C %*% sigmaxx %*% t(C) +sigma2
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
for (I in 2:n){
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-X[,I-1] + k %*% (Y[I-1,] - C%*%X[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#pre
X[,I+1] <- A %*% X[,I,drop=FALSE] + mvrnorm(mu=rbind(0,0,0),sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I+1] %*% t(C) + mvrnorm(mu=rbind(0,0),sigma2) %*% rnorm(1)
}
for (I in 2:n){
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-X[,I-1] + k %*% (Y[I-1,] - C%*%X[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
}
X
plot(r)
help(plot)
plot(X)
x
X
plot(X)
plot(X[1])
plot(X[1,])
plot(X[,1])
X[,1]
X[1,]
plot(X[1,])
plot(X[1,], type="o", col="blue")
plot(r,50)
r
plot(r,X[1,])
X[2,]
X[,1] = cbind(mean(r),mean(theta),0)
for (I in 2:n){
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-X[,I-1] + k %*% (Y[I-1,] - C%*%X[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
}
X
X <- matrix(nrow=3,ncol=n)
X[,1] = cbind(mean(r),mean(theta),0)
Y <- matrix(nrow=2,ncol=n)
Y <- cbind(r,theta)
Y[,1] <- C%*% X[,1]  + sqrt(rbind(2000^2,0.03^2))
sigmaxx<-diag(c(1985,.43,.43))
#sigmaxx<-diag(c(0,0,0))
sigmayy<-C %*% sigmaxx %*% t(C) +sigma2
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
for (I in 2:n){
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-Xpre[,I-1] + k %*% (Y[I-1,] - C%*%Xpre[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#pre
Xpre[,I-1] <- A %*% X[,I-1,drop=FALSE] + mvrnorm(mu=rbind(0,0,0),sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I+1] %*% t(C) + mvrnorm(mu=rbind(0,0),sigma2) %*% rnorm(1)
}
for (I in 2:n){
#pre
Xpre[,I-1] <- A %*% X[,I-1,drop=FALSE] + mvrnorm(mu=rbind(0,0,0),sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-Xpre[,I-1] + k %*% (Y[I-1,] - C%*%Xpre[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I+1] %*% t(C) + mvrnorm(mu=rbind(0,0),sigma2) %*% rnorm(1)
}
for (I in 2:n){
#pre
Xpre[,I-1] <- A %*% X[,I-1,drop=FALSE] + mvrnorm(mu=rbind(0,0,0),Sigma=sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-Xpre[,I-1] + k %*% (Y[I-1,] - C%*%Xpre[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I+1] %*% t(C) + mvrnorm(mu=rbind(0,0),Sigma=sigma2) %*% rnorm(1)
}
for (I in 2:n){
#pre
Xpre <- matrix(nrow=3,ncol=n)
Xpre[,I-1] <- A %*% X[,I-1,drop=FALSE] + mvrnorm(mu=rbind(0,0,0),Sigma=sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-Xpre[,I-1] + k %*% (Y[I-1,] - C%*%Xpre[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I+1] %*% t(C) + mvrnorm(mu=rbind(0,0),Sigma=sigma2) %*% rnorm(1)
}
for (I in 2:n){
#pre
Xpre <- matrix(nrow=3,ncol=n)
Xpre[,I-1] <- A %*% X[,I-1,drop=FALSE] + mvrnorm(mu=rbind(0,0,0),Sigma=sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-Xpre[,I-1] + k %*% (Y[I-1,] - C%*%Xpre[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I] %*% t(C) + mvrnorm(mu=rbind(0,0),Sigma=sigma2) %*% rnorm(1)
}
for (I in 2:n){
#pre
Xpre <- matrix(nrow=3,ncol=n)
Xpre[,I-1] <- A %*% X[,I-1,drop=FALSE] + mvrnorm(mu=rbind(0,0,0),Sigma=sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-Xpre[,I-1] + k %*% (Y[I-1,] - C%*%Xpre[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I]  + mvrnorm(mu=rbind(0,0),Sigma=sigma2) %*% rnorm(1)
}
for (I in 2:n){
#pre
Xpre <- matrix(nrow=3,ncol=n)
Xpre[,I-1] <- A %*% X[,I-1,drop=FALSE] + mvrnorm(mu=rbind(0,0,0),Sigma=sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-Xpre[,I-1] + k %*% (Y[I-1,] - C%*%Xpre[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I]  + sqrt(sigma2) %*% rnorm(1)
#mvrnorm(mu=rbind(0,0),Sigma=sigma2) %*% rnorm(1)
}
for (I in 2:n){
#pre
Xpre <- matrix(nrow=3,ncol=n)
Xpre[,I-1] <- A %*% X[,I-1,drop=FALSE] + mvrnorm(mu=rbind(0,0,0),Sigma=sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-Xpre[,I-1] + k %*% (Y[I-1,] - C%*%Xpre[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I]  + mvrnorm(mu=rbind(0,0),Sigma=sigma2)
}
X
X[1,]
ts.plot(x[1,])
warnings()
plot(X)
plot(X[3,])
sigmaxx
sigmaxx[[1]]
sigmaxx[[2]]
sigmaxx[[1,2]]
sigmaxx[[2,2]]
X[,I+6]
X[,I+1]
or (J in n+1:n+6){
#pre
X <- matrix(nrow=3,ncol=n+6)
Xpre <- matrix(nrow=3,ncol=n+6)
Xpre[,I-1] <- A %*% X[,I-1] + mvrnorm(mu=rbind(0,0,0),Sigma=sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-Xpre[,I-1] + k %*% (Y[I-1,] - C%*%Xpre[,I-1])
for (J in n+1:n+6){
#pre
X <- matrix(nrow=3,ncol=n+6)
Xpre <- matrix(nrow=3,ncol=n+6)
Xpre[,I-1] <- A %*% X[,I-1] + mvrnorm(mu=rbind(0,0,0),Sigma=sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-Xpre[,I-1] + k %*% (Y[I-1,] - C%*%Xpre[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I]  + mvrnorm(mu=rbind(0,0),Sigma=sigma2)
}
X
Y
X
X[1,]
plot(Y[,1])
plot(Y[1,])
for (I in 2:n){
#pre
Xpre <- matrix(nrow=3,ncol=n)
Xpre[,I-1] <- A %*% X[,I-1] + mvrnorm(mu=rbind(0,0,0),Sigma=sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-Xpre[,I-1] + k %*% (Y[I-1,] - C%*%Xpre[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I]  + mvrnorm(mu=rbind(0,0),Sigma=sigma2)
}
Y
Y
Y
for (I in 2:n){
#pre
Xpre <- matrix(nrow=3,ncol=n)
Xpre[,I-1] <- A %*% X[,I-1] + mvrnorm(mu=rbind(0,0,0),Sigma=sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-Xpre[,I-1] + k %*% (Y[I-1,] - C%*%Xpre[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I]  + mvrnorm(mu=rbind(0,0),Sigma=sigma2)
}
Y
X
for (I in 2:n){
#pre
Xpre <- matrix(nrow=3,ncol=n)
Xpre[,I-1] <- A %*% X[,I-1] + mvrnorm(mu=rbind(0,0,0),Sigma=sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-Xpre[,I-1] + k %*% (Y[I-1,] - C%*%Xpre[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I]  + mvrnorm(mu=rbind(0,0),Sigma=sigma2)
}
X
for (I in 2:n){
#pre
Xpre <- matrix(nrow=3,ncol=n)
Xpre[,I-1] <- A %*% X[,I-1] + mvrnorm(mu=rbind(0,0,0),Sigma=sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-Xpre[,I-1] + k %*% (Y[I-1,] - C%*%Xpre[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I]  + mvrnorm(mu=rbind(0,0),Sigma=sigma2)
}
X
X[,1] = cbind(mean(r),mean(theta),0)
Y <- matrix(nrow=2,ncol=n)
for (I in 2:n){
#pre
Xpre <- matrix(nrow=3,ncol=n)
Xpre[,I-1] <- A %*% X[,I-1] + mvrnorm(mu=rbind(0,0,0),Sigma=sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-Xpre[,I-1] + k %*% (Y[I-1,] - C%*%Xpre[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I]  + mvrnorm(mu=rbind(0,0),Sigma=sigma2)
}
X
n=50
A<-matrix(c(1, 0, 0, 0, 1, 1, 0, 0, 1), nrow=3,ncol=3,byrow=TRUE)
C<-matrix(c(1, 0, 0,0, 1, 0), nrow=2,ncol=3,byrow=TRUE)
sigma1<-matrix(c(500^2, 0, 0, 0, 0.005^2, 0, 0, 0, 0.005^2), nrow=3,ncol=3,byrow=TRUE)
sigma2<-matrix(c(2000^2, 0, 0,0, 0, 0.03^2), nrow=2,ncol=2,byrow=TRUE)
#initial condition
X <- matrix(nrow=3,ncol=n)
X[,1] = cbind(mean(r),mean(theta),0)
Y <- matrix(nrow=2,ncol=n)
Y <- cbind(r,theta)
Y[,1] <- C%*% X[,1]  + sqrt(rbind(2000^2,0.03^2))
sigmaxx<-diag(c(1985,.43,.43))
#sigmaxx<-diag(c(0,0,0))
sigmayy<-C %*% sigmaxx %*% t(C) +sigma2
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
for (I in 2:n){
#pre
Xpre <- matrix(nrow=3,ncol=n)
Xpre[,I-1] <- A %*% X[,I-1,drop=FALSE] + mvrnorm(mu=rbind(0,0,0),Sigma=sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-Xpre[,I-1] + k %*% (Y[I-1,] - C%*%Xpre[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I]  + mvrnorm(mu=rbind(0,0),Sigma=sigma2)
}
plot(r)
X
plot(X[1,])
X
for (I in 2:n){
#pre
Xpre <- matrix(nrow=3,ncol=n)
Xpre[,I-1] <- A %*% X[,I-1,drop=FALSE] + mvrnorm(mu=rbind(0,0,0),Sigma=sigma1)
sigmaxx_pre <-A %*% sigmaxx_update %*% t(A) + sigma1
sigmayy=C %*% sigmaxx_pre %*% t(C)+sigma2;
#K gain
k = sigmaxx %*% t(C) %*% solve(sigmayy);
#updating
X[,I]<-Xpre[,I-1] + k %*% (Y[I-1,] - C%*%Xpre[,I-1])
sigmaxx_update <-sigmaxx - k %*%C %*% sigmaxx
sigmayy_update <-C %*% sigmaxx_update %*% t(C) +sigma2
k1 = sigmaxx_update %*% t(C) %*% solve(sigmayy_update);
#chol(Sigma1) %*% matrix(rnorm(2),ncol=1)
Y[I] <- C %*% X[,I]  + mvrnorm(mu=rbind(0,0),Sigma=sigma2)
}
X
Y
plot(Y[,1])
plot(Y[1,])
setwd("C:\\Users\\RAN\\OneDrive\\Documents\\Time_Series_Analysis\\assignment04")
veks <- read.table("veks.csv",sep=",",header=TRUE)
str(veks)
head(veks)
# Daily average temperature and average hourly heat consumption
TH <- data.frame(Ta = aggregate(veks$Ta.f,list(veks$jdate),mean)[,2],
HC = aggregate(veks$HC.f,list(veks$jdate),mean)[,2])
TH$jdate <- sort(unique(veks$jdate))
TH$Date <- as.Date(TH$jdate,origin="1960-01-01")
head(TH)
plot(Ta ~ Date,TH,type="l")
plot(HC ~ Date,TH,type="l",lwd=2)
(lm1 <- lm(HC ~ Ta,TH))
lines((coef(lm1)[2]*Ta+coef(lm1)[1] ) ~ Date,TH,col=2,lwd=2)
axis(side = 4, at = coef(lm1)[2]*(-1:4)*5+coef(lm1)[1], labels=(-1:4)*5,col=2)
my.rls <- function(y,x,lambda){
# x must be a matrix with one observation in each row
n <- length(y)
np <- ncol(x)
I <- diag(rep(1,np))
th <- matrix(0,ncol=1,nrow=np)
P <- I * 0.1
store <- matrix(0, nrow=n, ncol=2+2*np)
colnames(store) <- c(paste("x",1:np,sep=""),"e", paste("th",1:np,sep=""),"lambda")
store[1,] <- c(x[1,], 0, t(th), lambda)
for (i in 2:n){
xt <- t(x[i,,drop=FALSE] )
k <- P%*%xt / as.numeric((lambda + t(xt)%*%P%*%xt))
e <- y[i] - t(xt)%*%th
th <- th + k%*%e
Ikx=I-k%*%t(xt)
P=lambda^-1*Ikx%*%P;
## Saving some information
store[i,] <- c(t(xt),e,t(th),lambda)
}
return(store)
}
st <- my.rls(y=TH$HC,x=cbind(1,TH$Ta),lambda=0.9)
head(st)
par(mfrow=c(3,1),mar=c(3,3,2,1),mgp=c(2,0.7,0))
plot(st[,3],ylab="Error", main =paste("Lambda fixed at",st[1,6]), xlab="Time (Days)")
plot(st[,4],ylab="Intercept", xlab="Time (Days)")
plot(st[,5],ylab="Slope", xlab="Time (Days)")
## Finding optimal lambda
## Initializing ~50 observations
plot(X[1,])
plot(Y[1,])
setwd("C:\\Users\\RAN\\OneDrive\\Documents\\Time_Series_Analysis\\assignment04")
hc <- read.csv("veks.csv")$HC.f
hct<-ts(hc)
summary(hct)
ts.plot(hct)
lhct <- log(hct)
summary(lhct)
